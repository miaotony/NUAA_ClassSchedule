name: Release

on:
  workflow_dispatch:
  push:
    tags: 
      - 'V*' # Push events to matching V*
    
jobs:
  create:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag: ${{ steps.get_tag.outputs.tag }}
      
    steps:
    - name: Get tag
      id: get_tag
      run: |
        tag=$(echo ${{ github.ref }} | rev | cut -d/ -f1 | rev)
        echo $tag
        echo "::set-output name=tag::$tag"
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        release_name: ${{ steps.get_tag.outputs.tag }}
        draft: true
        prerelease: false

  build:
    needs: [create]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Packing
      run: |
        pyinstaller -i ./img/calendar.ico -n NUAA_iCal_${{ matrix.os }} -F main.py
              
    - name: Upload to artifact
      uses: actions/upload-artifact@v2
      with:
        name: NUAA_iCal_${{ matrix.os }}
        path: ./dist/
      
    - name: Upload Release Asset Windows
      if: ${{ contains(matrix.os, 'windows') }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
        asset_path: ./dist/NUAA_iCal_${{ matrix.os }}.exe
        asset_name: NUAA_iCal_${{ matrix.os }}_${{ needs.create.outputs.tag }}.exe
        asset_content_type: application/x-dosexec
        
    - name: Upload Release Asset else
      if: ${{ contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos') }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
        asset_path: ./dist/NUAA_iCal_${{ matrix.os }}
        asset_name: NUAA_iCal_${{ matrix.os }}_${{ needs.create.outputs.tag }}
        asset_content_type: application/x-executable

  release:
    runs-on: ubuntu-latest
    needs: 
      - build
      - create
      
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4.1.7
      with:
        path: ./dist/

    - name: Display structure of downloaded files
      run: ls -aR
      working-directory: ./dist/

    - name: Generate sha256sum
      id: vars
      run: |
        mv ./dist/NUAA_iCal*/NUAA_iCal* ./
        filename=$(find ./ -type f \( -iname NUAA_iCal\* \))
        sha256sum $filename > ./sha256sum.txt
        echo $filename
        echo "::set-output name=shafilepath::./sha256sum.txt"

    - name: Upload Release sha256sum Asset
      id: upload-release-sha256sum-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
        asset_path: ${{ steps.vars.outputs.shafilepath }}
        asset_name: sha256sum.txt
        asset_content_type: text/plain
